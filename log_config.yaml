# 版本定义，指定使用的日志配置版本
version: 1

# 定义格式化器 (formatters)，用于定义日志输出的格式
formatters:
  # 简洁格式，输出日志时间和消息
  brief:
    format: "%(asctime)s - %(message)s"  # 格式为：时间戳 - 消息内容
    datefmt: "%Y-%m-%d %H:%M:%S"  # 自定义时间格式：年-月-日 时:分:秒

  simple:
    format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s - %(filename)s - %(lineno)d - %(funcName)s"
    datefmt: "%Y-%m-%d %H:%M:%S"  # 自定义时间格式：年-月-日 时:分:秒

# 定义处理器 (handlers)，用于控制日志输出的目标
handlers:
  # 控制台处理器，输出到控制台
  console:
    class: logging.StreamHandler  # 使用流处理器 (StreamHandler) 输出到控制台
    formatter: brief  # 使用 "brief" 格式化器
    level: INFO  # 设置控制台输出的最低日志级别为 INFO，意味着 INFO 级别及以上的日志才会被输出
    stream: ext://sys.stdout  # 输出到标准输出 (控制台)

  # 文件处理器，将日志写入文件
  file:
    class: logging.FileHandler  # 使用文件处理器 (FileHandler)，将日志写入文件
    formatter: simple  # 使用 "simple" 格式化器
    level: DEBUG  # 设置文件输出的最低日志级别为 DEBUG，意味着 DEBUG 级别及以上的日志都会写入文件
    filename: qd/log/qd_debug.log  # 将日志写入 "qd_debug.log" 文件
  click_image_file:
    class: logging.FileHandler  # 使用文件处理器 (FileHandler)，将日志写入文件
    formatter: simple  # 使用 "simple" 格式化器
    level: DEBUG  # 设置文件输出的最低日志级别为 DEBUG，意味着 DEBUG 级别及以上的日志都会写入文件
    filename: qd/log/qd_click_image_debug.log  # 将日志写入 "qd_click_image_debug.log" 文件
  # 错误日志处理器，将错误级别的日志写入滚动文件
  error:
    class: logging.handlers.RotatingFileHandler  # 使用滚动文件处理器 (RotatingFileHandler)，支持文件滚动
    level: ERROR  # 设置错误日志处理器的日志级别为 ERROR，只有 ERROR 级别及以上的日志会被记录
    formatter: simple  # 使用 "simple" 格式化器
    filename: qd/log/qd_error.log  # 错误日志文件名为 "qd_error.log"
    maxBytes: 10485760  # 设置文件大小上限为 10 MB (10485760 字节)，当文件达到这个大小时会滚动
    backupCount: 20  # 保留 20 个备份文件，超过此数量时最旧的文件会被删除
    encoding: utf8  # 设置文件编码为 UTF-8

# 定义日志记录器 (loggers)，用于指定不同模块的日志配置
loggers:
  # 定义一个名为 "qd_main" 的日志记录器
  qd_main:
    level: DEBUG  # 设置记录器的日志级别为 DEBUG，意味着记录器会记录所有级别的日志（DEBUG 及以上）
    handlers: [console, file, error]  # 设置此记录器使用三个处理器：控制台处理器、文件处理器、错误日志处理器
  click_image:
    level: DEBUG  # 设置记录器的日志级别为 DEBUG，意味着记录器会记录所有级别的日志（DEBUG 及以上）
    handlers: [click_image_file]
# 定义根记录器 (root)，这是默认的日志记录器
root:
  level: DEBUG  # 设置根记录器的日志级别为 DEBUG
  handlers: [console]  # 根记录器只使用控制台处理器 (console)，即日志只会显示在控制台，不会写入文件
